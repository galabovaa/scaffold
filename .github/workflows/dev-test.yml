name: dev-test

on: ["push", "pull_request"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: DEBUG
  MAKEFLAGS: -j
  CTEST_PARALLEL_LEVEL: 8

  # First test current default build. (master) (still 1.0.0)
  HIGHS_VERSION: 1.0.0

jobs:
  build_highs:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      uses: actions/cache@v1
      with:
        path: ./Dependencies
        key: dependencies-${{env.HIGHS_VERSION}}-${{ matrix.os }}

    - name: Clone HiGHS
      if: steps.cached-dependencies.outputs.cache-hit != 'true'
      run: |
        cd $HOME
        git clone https://www.github.com/ERGO-Code/HiGHS.git
        cmake -E make_directory ./HiGHS/build_dev
        cd ./HiGHS
        git checkout dev-option
        cd ./build_dev
        ls

    # Fast build only.
    - name: Build HiGHS release 
      run: |
        cd $HOME/HiGHS/build_dev
        ls 
        pwd
        cmake -DFAST_BUILD=ON ..
        cmake --build .

    - name: Test
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cd $HOME/HiGHS/build_dev
        ctest

    # Here the default is just hello. Component test below.  
    - name: Scaffold Build
      run: |
        cd $HOME/HiGHS
        rm -rf $HOME/HiGHS/scaffold/ 
        rm -rf $HOME/HiGHS/component_test/
        rm -rf $HOME/HiGHS/dev_presolve/
        mv ${{github.workspace}}/scaffold/ .
        printf "\nadd_subdirectory(scaffold)\n" | tee -a $HOME/HiGHS/CMakeLists.txt
        cd build_dev
        cmake -DFAST_BUILD=ON ..
        cmake --build .
      
    - name: Scaffold Test
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cd $HOME/HiGHS/build_dev
        ctest
    
    - name: Install dependencies on ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libboost-dev libboost-iostreams-dev libboost-program-options-dev libboost-serialization-dev

    - name: Dev Build
      run: |
        cd $HOME/HiGHS
        mv ${{github.workspace}}/dev_presolve/ .
        printf "\nadd_subdirectory(dev_presolve)\n" | tee -a $HOME/HiGHS/CMakeLists.txt
        cd build_dev
        cmake -DFAST_BUILD=ON ..
        cmake --build .
      
    - name: Test
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cd $HOME/HiGHS/build_dev
        ctest
    
    - name: Dev Build (non-fast)
      run: |
        cd $HOME/HiGHS
        mkdir build_non_fast
        cd build_non_fast
        cmake ..
        cmake --build .
      
    - name: Test
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cd $HOME/HiGHS/build_non_fast
        ctest
    