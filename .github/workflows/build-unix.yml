name: test-highs

on: ["push", "pull_request"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: DEBUG
  MAKEFLAGS: -j
  CTEST_PARALLEL_LEVEL: 8

  # First test current default build. (master) (still 1.0.0)
  HIGHS_VERSION: 1.0.0

jobs:
  build_highs:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      uses: ktmud/cached-dependencies@v1
      with:
        run: |
          git clone https://www.github.com/ERGO-Code/HiGHS.git
          cmake -E make_directory ./HiGHS/build
          cd ./HiGHS/build
          ls

    - name: Build HiGHS release and debug
      shell: bash
      run: |
        cd $HOME/HiGHS/build
        cmake --build . 
#        cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: $HOME/HiGHS/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C RELEASE
        ctest -C $BUILD_TYPE

    - name: Fast build
    # Then test whether the fast build succeeded and runs tests.
    # (fast-build -> to be merged into master) 
    # todo: add macos and windows
    # os: [ubuntu-18.04,ubuntu-16.04,macos-10.15,windows-latest

      run: |
        cd $HOME
        cmake -E make_directory ./HiGHS/build_fast
        cd ./HiGHS/build_fast
        cmake -DFAST_BUILD=ON ..
        cmake --build . --config $BUILD_TYPE

    # new (short ctest instances) todo: then + scaffold; then + component_test; then + dev-presolve)
    # add as separate test instances in ctest, obviously.
    # maybe add settings somehow to know which components? Like config?
    - name: Test
      working-directory: $HOME/HiGHS/build_fast
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C RELEASE
        ctest -C $BUILD_TYPE